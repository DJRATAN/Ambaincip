! function() {
    const e = function(e) {
            const t = e.querySelector(".kg-audio-player-container"),
                a = e.querySelector(".kg-audio-play-icon"),
                r = e.querySelector(".kg-audio-pause-icon"),
                o = e.querySelector(".kg-audio-seek-slider"),
                i = e.querySelector(".kg-audio-playback-rate"),
                d = e.querySelector(".kg-audio-mute-icon"),
                l = e.querySelector(".kg-audio-unmute-icon"),
                n = e.querySelector(".kg-audio-volume-slider"),
                u = e.querySelector("audio"),
                s = e.querySelector(".kg-audio-duration"),
                c = e.querySelector(".kg-audio-current-time"),
                m = [{
                    rate: .75,
                    label: "0.7\xd7"
                }, {
                    rate: 1,
                    label: "1\xd7"
                }, {
                    rate: 1.25,
                    label: "1.2\xd7"
                }, {
                    rate: 1.75,
                    label: "1.7\xd7"
                }, {
                    rate: 2,
                    label: "2\xd7"
                }];
            let k = null,
                g = 1;
            const y = () => {
                    o.value = Math.floor(u.currentTime), c.textContent = h(o.value), t.style.setProperty("--seek-before-width", `${o.value/o.max*100}%`), k = requestAnimationFrame(y)
                },
                v = e => {
                    e === o ? t.style.setProperty("--seek-before-width", `${e.value/e.max*100}%`) : t.style.setProperty("--volume-before-width", `${e.value/e.max*100}%`)
                },
                h = e => {
                    const t = Math.floor(e / 60),
                        a = Math.floor(e % 60);
                    return `${t}:${a<10?`0${a}`:`${a}`}`
                },
                f = () => {
                    s.textContent = h(u.duration)
                },
                L = () => {
                    o.max = Math.floor(u.duration)
                },
                p = () => {
                    if (u.buffered.length > 0) {
                        const e = Math.floor(u.buffered.end(u.buffered.length - 1));
                        t.style.setProperty("--buffered-width", `${e/o.max*100}%`)
                    }
                };
            u.readyState > 0 ? (f(), L(), p()) : u.addEventListener("loadedmetadata", () => {
                f(), L(), p()
            }), a.addEventListener("click", () => {
                a.classList.add("kg-audio-hide"), r.classList.remove("kg-audio-hide"), u.play(), requestAnimationFrame(y)
            }), r.addEventListener("click", () => {
                r.classList.add("kg-audio-hide"), a.classList.remove("kg-audio-hide"), u.pause(), cancelAnimationFrame(k)
            }), d.addEventListener("click", () => {
                d.classList.add("kg-audio-hide"), l.classList.remove("kg-audio-hide"), u.muted = !1
            }), l.addEventListener("click", () => {
                l.classList.add("kg-audio-hide"), d.classList.remove("kg-audio-hide"), u.muted = !0
            }), i.addEventListener("click", () => {
                const e = m[(g + 1) % 5];
                g += 1, u.playbackRate = e.rate, i.textContent = e.label
            }), u.addEventListener("progress", p), o.addEventListener("input", e => {
                v(e.target), c.textContent = h(o.value), u.paused || cancelAnimationFrame(k)
            }), o.addEventListener("change", () => {
                u.currentTime = o.value, u.paused || requestAnimationFrame(y)
            }), n.addEventListener("input", e => {
                const {
                    value: t
                } = e.target;
                v(e.target), u.volume = t / 100
            })
        },
        t = document.querySelectorAll(".kg-audio-card");
    for (let a = 0; a < t.length; a++) e(t[a])
}();